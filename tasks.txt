	•	Написать sql-запросы:
	•	Вывести к каждому самолету класс обслуживания и количество мест этого класса
	•	Найти 3 самых вместительных самолета (модель + кол-во мест)
	•	Найти все рейсы, которые задерживались более 2 часов
	•	Найти последние 10 билетов, купленные в бизнес-классе (fare_conditions = 'Business'), с указанием имени пассажира и контактных данных
	•	Найти все рейсы, у которых нет забронированных мест в бизнес-классе (fare_conditions = 'Business')
	•	Получить список аэропортов (airport_name) и городов (city), в которых есть рейсы с задержкой по вылету
	•	Получить список аэропортов (airport_name) и количество рейсов, вылетающих из каждого аэропорта, отсортированный по убыванию количества рейсов
	•	Найти все рейсы, у которых запланированное время прибытия (scheduled_arrival) было изменено и новое время прибытия (actual_arrival) не совпадает с запланированным
	•	Вывести код, модель самолета и места не эконом класса для самолета "Аэробус A321-200" с сортировкой по местам
	•	Вывести города, в которых больше 1 аэропорта (код аэропорта, аэропорт, город)
	•	Найти пассажиров, у которых суммарная стоимость бронирований превышает среднюю сумму всех бронирований
	•	Найти ближайший вылетающий рейс из Екатеринбурга в Москву, на который еще не завершилась регистрация
	•	Вывести самый дешевый и дорогой билет и стоимость (в одном результирующем ответе)
	•	Написать DDL таблицы Customers, должны быть поля id, firstName, LastName, email, phone. Добавить ограничения на поля (constraints)
	•	Написать DDL таблицы Orders, должен быть id, customerId, quantity. Должен быть внешний ключ на таблицу customers + constraints
	•	Написать 5 insert в эти таблицы
	•	Удалить таблицы
	•	Сохранить запросы в файле sql-task.sql в resourсes/sql в отдельной ветке и сделать PR. В MR должен быть только один файл